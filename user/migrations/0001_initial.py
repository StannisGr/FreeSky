# Generated by Django 4.0.3 on 2022-04-19 16:09

from django.db import migrations, models
import django.utils.timezone
import user.manager
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, verbose_name='Почта')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=user.models.user_directory_path, verbose_name='Аватар')),
                ('sex', models.CharField(blank=True, choices=[('женщина', 'ж'), ('мужчина', 'м')], max_length=7, null=True, verbose_name='Пол')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='О себе')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('date_joined', models.DateField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', user.manager.UserManager()),
            ],
        ),
    ]
